<!--
JBoss, Home of Professional Open Source
Copyright 2011, Red Hat, Inc., and individual contributors
by the @authors tag. See the copyright.txt in the distribution for a
full listing of individual contributors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<facelet-taglib xmlns="http://java.sun.com/xml/ns/javaee"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd"
                version="2.0">
    <namespace>http://jboss.org/seam/faces</namespace>

    <tag>
        <description>
            This action component specifies an application-specific command (or action),
            using an EL method expression, to be invoked during one of the JSF lifecycle
            phases proceeding Render Response (i.e., view rendering).
        </description>
        <tag-name>viewAction</tag-name>
        <component>
            <component-type>org.jboss.seam.faces.ViewAction</component-type>
        </component>
        <attribute>
            <description>
                Method expression referencing the action method to be invoked by the
                component. View actions support declarative navigation just like
                UICommand components.
            </description>
            <name>action</name>
            <required>true</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>
                By default, a view action is not executed on postback. If your application
                is decidedly stateless, you may need the view action to execute on any type
                of request. The default value is false.
            </description>
            <name>onPostback</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                You may only want the view action to be invoked under certain conditions.
                For that, you can use this attribute, which accepts an EL value expression
                that must evaluate to a boolean value.
            </description>
            <name>if</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                Setting the immediate attribute to true moves the invocation to the
                Apply Request Values phase instead of the default, the Invoke Application
                phase. The default value is false.
            </description>
            <name>immediate</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                Specifies the phase in which the action invocation should occur
                using the name of the phase constant in the PhaseId class (the case does
                not matter). The default is INVOKE_APPLICATION.
            </description>
            <name>phase</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            This component allows to perform advanced validation of submitted form data.
        </description>
        <tag-name>validateForm</tag-name>
        <component>
            <component-type>org.jboss.seam.faces.ValidateForm</component-type>
        </component>
        <attribute>
            <description>
                The JSF validator used for the validation of the form.
            </description>
            <name>validatorId</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                The attribute is used to specify a space-separated list of alias
                definitions.
            </description>
            <name>fields</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <!-- org.jboss.seam.faces.InputContainer is a composite component, does not need taglib -->
    <tag>
        <description>
            This component is a generic converter which allows for basic conversion between objects and an auto incremented id.
            The converter is conversation scoped, so the same objects should be available throughout a full conversation.
        </description>
        <tag-name>objectConverter</tag-name>
        <converter>
            <converter-id>org.jboss.seam.faces.conversion.ObjectConverter</converter-id>
        </converter>
    </tag>

</facelet-taglib>
